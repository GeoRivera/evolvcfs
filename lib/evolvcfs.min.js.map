{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/evolvcfs.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Global","document","_curry","fn","arr","arguments","length","undefined","args","Array","e","a","concat","_toConsumableArray","_compose","fns","reduce","f","g","_pipe","_not","_flip","b","reverse","_all","acc","curr","_any","_box","x","isArray","_toDate","Date","_dtFieldToDate","toString","$$","getElement","_where","qry","replace","split","val","_exists","_fromNullable","_isDateTimeField","fieldName","$","attr","_tryCatch","_isBlankDtTm","getFormElement","_isBlankDtOrTm","_hasDtOrTm","_isBlank","_hasValue","_wasModified","oldValue","currValue","_keepValue","_valueChanged","hasActiveEnrollment","peopleId","programId","cond","eval","has_enrollment","getDataValue","end_date","setXMLAttribute","xs","slice","getNodeFromXML","formXML","setAttribute","refreshView","getXMLAttribute","getAttribute","setRequired","bool","makeRequired","makeUnRequired","map","id","setRequiredIfEntered","prev","setElement","el","formElementExists","xmlNode","notModifiable","dtTime","date","time","setFormElement","src","res","getElementFromXML","getClientAge","obj","charAt","selectSingleNode","xslTarget","innerHTML","transformXML","formXSL","XMLDocument","xml","IsDirty","formState","form","showErrMsg","errMsg","elObj","hideErrMsg","parent","prepend","css","margin","padding","float","width","color","backgroundColor","fontFamily","fontSize","verticalAlign","remove","dtComp","dt1","comp","dt2","dateIsAfter","dateIsBefore","allDt","passedAllChecks","msg","chkCurrCondition","alert","isAtMostHoursAfter","hours","eraseOnDisable","currEl","eraseList","apply","this","copyEvents","fromEl","toEl","events","forEach","ev","func","syncDtTmEvents","getElementById","window"],"mappings":"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","file":"evolvcfs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function (Global, document) {\r\n    /* ----------------------------------------------------------------------------\r\n         Evolv's formfunction.js mapping\r\n    ---------------------------------------------------------------------------- */\r\n    // const _getFormElement = _tryCatch(getFormElement);\r\n    // const _getElementFromXML = _tryCatch(getElementFromXML);\r\n    // const _getDataValue = _tryCatch(getDataValue);\r\n    // const _transformXML = _tryCatch(transformXML);\r\n    // const _IsDirty = _tryCatch(IsDirty);\r\n    // const _formState = _tryCatch(formState);\r\n    // const _setFormElement = _tryCatch(setFormElement);\r\n    // const _formElementExists = _tryCatch(formElementExists);\r\n\r\n\r\n    /* ----------------------------------------------------------------------------\r\n         General utils\r\n    ---------------------------------------------------------------------------- */\r\n    const _curry = (fn, arr = []) => (...args) => (a => a.length === fn.length ? fn(...a) : _curry(fn, a))([...arr, ...args]);\r\n\r\n    const _compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\n    const _pipe = (...fns) => fns.reduce((f, g) => (...args) => g(f(...args)));\r\n\r\n    const _not = (fn) => (...args) => !fn(...args);\r\n\r\n    const _flip = (fn) => (...args) => fn(...args.reverse());\r\n\r\n    const _all = (...args) => args.reduce((acc, curr) => !!(acc && curr), true);\r\n\r\n    const _any = (...args) => args.reduce((acc, curr) => !!(acc || curr), false);\r\n\r\n    const _box = (x) => Array.isArray(x) ? x : [x];\r\n\r\n    /* ----------------------------------------------------------------------------\r\n        Misc\r\n    ---------------------------------------------------------------------------- */\r\n    const _toDate = (x) => new Date(x);\r\n\r\n    const _dtFieldToDate = (x) => Object.prototype.toString.call(x) === '[object String]' ? _toDate($$.getElement(x)) : x;\r\n\r\n    /**\r\n     * Allows the use Handlebars notation to encapsulate variable names for Evolv's DB like functions (getDataValue, setDataFromValue etc.).\r\n     * @example eval( _where('program_info_id = {{programId}}') );\r\n     *\r\n     * @param {any} qry\r\n     * @returns {string}\r\n     */\r\n    const _where = (qry) => {\r\n        let res = qry.replace(/{{/g, \"\\\\\\'\\\\\\'\\' + {{\")\r\n            .replace(/}}/g, \" + '\\\\\\'\\\\\\' {{\")\r\n            .replace(/{#/g, \"\\' + {{\")\r\n            .replace(/#}/g, \" + ' {{\")\r\n            .split('{{');\r\n        return \"\\'\" + res.reduce((acc, val) => acc + val, '') + \"\\'\";\r\n    }\r\n    /* ----------------------------------------------------------------------------\r\n        Validation\r\n    ---------------------------------------------------------------------------- */\r\n    const _exists = (x) => ((x !== undefined && x !== null) || !!x);\r\n\r\n    const _fromNullable = (x) => (x === undefined || !x);\r\n\r\n    const _isDateTimeField = (fieldName) => ($('#' + fieldName).attr('type_code') === 'DT') || ($('#' + fieldName).attr('type_code') === 'D');\r\n\r\n\r\n\r\n    // TODO - Replace with Left/Right/Either\r\n    const _tryCatch = (fn) => {\r\n        try {\r\n            return fn\r\n        } catch (e) {}\r\n    }\r\n\r\n    const _isBlankDtTm = (fieldName) => (getFormElement(fieldName) === '' && getFormElement('time_' + fieldName) === '');\r\n\r\n    const _isBlankDtOrTm = (fieldName) => (getFormElement(fieldName) === '' || getFormElement('time_' + fieldName) === '');\r\n    const _hasDtOrTm = _not(_isBlankDtTm);\r\n\r\n    const _isBlank = (fieldName) => _isDateTimeField(fieldName) ? _isBlankDtTm(fieldName) : (getFormElement(fieldName) === '');\r\n    const _hasValue = (fieldName) => _isDateTimeField(fieldName) ? _not(_isBlankDtOrTm)(fieldName) : _not(_isBlank)(fieldName);\r\n\r\n    // const _getCurrValue = (fieldName) => {\r\n    //     var currValue = $$.getElement(fieldName);\r\n\r\n    //     if (_isDateTimeField(fieldName) && currValue.length <= 16) { // If datetime is incomplete, builds datetime from date and time fields\r\n    //         currValue = $('#' + fieldName).val() + ' ' + $('#time_' + fieldName).val()\r\n    //     }\r\n\r\n    //     return currValue\r\n    // }\r\n\r\n    const _wasModified = (fieldName) => {\r\n        var oldValue = $('#' + fieldName).attr('old_value');\r\n        var currValue = $$.getElement(fieldName);\r\n\r\n        if (!_exists(oldValue)) {\r\n            $('#' + fieldName).attr('old_value', '');\r\n        }\r\n\r\n        if (_hasValue(fieldName)) {\r\n            return (_exists(oldValue) && (oldValue !== currValue))\r\n        }\r\n        return false\r\n    }\r\n\r\n    const _keepValue = (fieldName) => {\r\n        var currValue = $$.getElement(fieldName);\r\n        if (_hasValue(fieldName)) {\r\n            $('#' + fieldName).attr('old_value', currValue);\r\n        }\r\n    }\r\n\r\n    const _valueChanged = (fieldName) => _wasModified(fieldName) && _fromNullable(_keepValue(fieldName));\r\n\r\n    /* ----------------------------------------------------------------------------\r\n        Interfaces\r\n    ---------------------------------------------------------------------------- */\r\n\r\n\r\n\r\n\r\n\r\n    Global.$$ = {\r\n        hasActiveEnrollment: (peopleId, programId) => {\r\n            const cond = eval(_where('program_info_id = {{programId}}'));\r\n            const has_enrollment = getDataValue('current_program_enrollment_view', 'people_id', peopleId, 'program_name', cond);\r\n            const end_date = getDataValue('current_program_enrollment_view', 'people_id', peopleId, 'end_date', cond);\r\n\r\n            return (has_enrollment && !end_date);\r\n        },\r\n\r\n        setXMLAttribute: (xs, attr, val) => {\r\n            xs = _box(xs).slice();\r\n\r\n            if (typeof (val) === 'number') {\r\n                val = (val) ? 'true' : 'false';\r\n            }\r\n            for (let i = 0; i < xs.length; i++) {\r\n                _tryCatch($$.getNodeFromXML(xs[i], formXML).setAttribute(attr, val));\r\n            }\r\n            refreshView(xs[0]);\r\n        },\r\n\r\n        getXMLAttribute: (fieldName, attr) => {\r\n            return _tryCatch($$.getNodeFromXML(fieldName, formXML).getAttribute(attr));\r\n        },\r\n\r\n        setRequired: (xs, bool) => {\r\n            xs = _box(xs).slice();\r\n            let fn = (bool) ? makeRequired : makeUnRequired;\r\n            xs.map(x => _tryCatch(fn({\r\n                id: x\r\n            })))\r\n        },\r\n\r\n        setRequiredIfEntered: (fieldName) => {\r\n            $$.setRequired(fieldName, !_isBlank(fieldName));\r\n            if (_isDateTimeField(fieldName)) {\r\n                $('#time_' + fieldName)\r\n                    .prev()\r\n                    .attr('style', $('#caption_' + fieldName).attr('style'))\r\n            }\r\n        },\r\n\r\n        setElement: (el, val) => {\r\n            if (formElementExists(el)) {\r\n                var xmlNode = $$.getNodeFromXML(el, formXML);\r\n                var notModifiable = xmlNode.getAttribute('is_modifiable') === 'true' ? true : false;\r\n\r\n                xmlNode.setAttribute('is_modifiable', 'true');\r\n\r\n                // Sets DateTime type fields appropriately\r\n                if (_isDateTimeField(el)) {\r\n                    var dtTime = val.split(/\\s/i)\r\n                    var date = dtTime[0];\r\n                    var time = (dtTime[1] ? dtTime[1] : '') + (dtTime[2] ? dtTime[2] : '');\r\n                    _tryCatch(setFormElement(el, date));\r\n                    _tryCatch(setFormElement('time_' + el, time));\r\n                    notModifiable && $('#time_' + el).attr('disabled', !notModifiable);\r\n                } else {\r\n                    _tryCatch(setFormElement(el, val));\r\n                }\r\n\r\n                notModifiable && $('#' + el).attr('disabled', !notModifiable);\r\n            }\r\n        },\r\n\r\n        getElement: (el, src) => {\r\n            var res = _fromNullable(src) ? getElementFromXML(formXML, el) : getFormElement(el);\r\n\r\n            if (_isDateTimeField(el) && res.length <= 16) { // If datetime is incomplete, builds datetime from date and time fields\r\n                res = $('#' + el).val() + ' ' + $('#time_' + el).val()\r\n            }\r\n\r\n            return res\r\n        },\r\n\r\n\r\n        getClientAge: (peopleId) => getDataValue('client_personal_view', 'people_id', peopleId, 'age'),\r\n\r\n        getNodeFromXML: (el, obj) => {\r\n            obj = (_fromNullable(obj)) ? formXML : obj;\r\n            var res = null;\r\n\r\n            if (el.charAt(0) !== '#') {\r\n                res = obj.selectSingleNode(\"form_object/form_group/form_item[@column_name='\" + el + \"']\") || obj.selectSingleNode(\"form_group/form_item[@column_name='\" + el + \"']\");\r\n            } else {\r\n                res = obj.selectSingleNode(\"form_object/form_group/form_item[@caption='\" + el.slice(1) + \"']\") || obj.selectSingleNode(\"form_group/form_item[@caption='\" + el.slice(1) + \"']\");\r\n            }\r\n            return res\r\n        },\r\n\r\n        refreshView: (obj) => {\r\n            xslTarget.innerHTML = transformXML(formXSL.XMLDocument.xml, formXML.xml);\r\n            IsDirty() && formState(obj.form, true);\r\n        },\r\n\r\n        showErrMsg: (fieldName, errMsg) => {\r\n            var elObj = $('#' + fieldName)[0];\r\n            var cssErr = {\r\n                margin: '10px 0px',\r\n                padding: '10px',\r\n                float: 'left',\r\n                width: '50%',\r\n                color: '#D8000C',\r\n                backgroundColor: '#FFD2D2',\r\n                fontFamily: 'arial',\r\n                fontSize: '.8em',\r\n                verticalAlign: 'middle'\r\n            }\r\n            $$.hideErrMsg(fieldName)\r\n\r\n            errMsg = '❌ ' + errMsg;\r\n\r\n            $(elObj)\r\n                .parent()\r\n                .parent()\r\n                .parent()\r\n                .prepend('<tr id=\"' + elObj.id + '_err_row\"><td width=\"120\"></td><td rowSpan=\"1\" colSpan=\"1\"><div id=' + elObj.id + '_err_msg >' + errMsg + '</div></td></tr>');\r\n            $('#' + elObj.id + '_err_msg').css(cssErr);\r\n        },\r\n\r\n        hideErrMsg: (fieldName) => {\r\n            $('#' + fieldName + '_err_row').remove();\r\n        },\r\n\r\n        dtComp: (dt1, comp, dt2) => {\r\n            dt1 = _dtFieldToDate(dt1);\r\n            dt2 = _dtFieldToDate(dt2);\r\n            switch (comp) {\r\n                case '=':\r\n                    return dt1.toString() === dt2.toString()\r\n                case 'equal':\r\n                    return dt1.toString() === dt2.toString()\r\n                case '!=':\r\n                    return dt1.toString() !== dt2.toString()\r\n                case 'different':\r\n                    return dt1.toString() !== dt2.toString()\r\n                case '>':\r\n                    return dt1 > dt2\r\n                case 'after':\r\n                    return dt1 > dt2\r\n                case '>=':\r\n                    return dt1 >= dt2\r\n                case '<':\r\n                    return dt1 < dt2\r\n                case 'before':\r\n                    return dt1 < dt2\r\n                case '<=':\r\n                    return dt1 <= dt2\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n        },\r\n\r\n        dateIsAfter: (dt1, dt2, errMsg) => {\r\n            if (_hasValue(dt1) && _valueChanged(dt1) && !$$.dtComp(dt1, 'after', dt2)) {\r\n                $$.showErrMsg(dt1, errMsg);\r\n                (_hasValue(dt1)) && $$.setElement(dt1, '');\r\n            } else if (_hasValue(dt1) && $$.dtComp(dt1, 'after', dt2)) {\r\n                $$.hideErrMsg(dt1)\r\n            }\r\n        },\r\n\r\n        dateIsBefore: (dt1, dt2, errMsg) => {\r\n            if (_hasValue(dt1) && _valueChanged(dt1) && !$$.dtComp(dt1, 'before', dt2)) {\r\n                $$.showErrMsg(dt1, errMsg);\r\n                (!_isBlankDtTm(dt1)) && $$.setElement(dt1, '');\r\n            } else if (!_isBlankDtTm(dt1)) {\r\n                $$.hideErrMsg(dt1)\r\n            }\r\n        },\r\n\r\n        allDt: (arr) => {\r\n            let errMsg = '';\r\n            let passedAllChecks = arr.reduce((acc, xs) => {\r\n                let [dt1, comp, dt2, msg] = [...xs];\r\n                let chkCurrCondition = $$.dtComp(dt1, comp, dt2);\r\n                // console.log(dt1, ' ', comp, ' ', dt2, ' :', chkCurrCondition);\r\n                if (!chkCurrCondition) {\r\n                    errMsg += msg + '\\n';\r\n                    $$.setElement(dt1, '');\r\n                }\r\n                return acc && chkCurrCondition\r\n            }, true)\r\n\r\n            if (!passedAllChecks) {\r\n                alert(errMsg);\r\n            }\r\n            return passedAllChecks\r\n        },\r\n\r\n        isAtMostHoursAfter: (dt1, hours, dt2, errMsg) => {\r\n            dt1 = _dtFieldToDate(dt1);\r\n            dt2 = _dtFieldToDate(dt2);\r\n            const timeDiff = (dt2 - dt1) / 60 / 60 / 1000;\r\n\r\n            if (timeDiff > hours) {\r\n                alert(errMsg);\r\n                $$.setElement(dt1, '');\r\n            }\r\n        },\r\n\r\n        eraseOnDisable: (currEl, eraseList) => {\r\n            eraseList = _box(eraseList);\r\n            eraseList.map(el => {\r\n                if (_tryCatch(eval($$.getXMLAttribute(el, 'disable_rule_code')))) {\r\n                    _tryCatch(setFormElement(el, ''));\r\n                    $('#' + el + '_prompt').val('')\r\n                }\r\n            });\r\n        },\r\n\r\n        getFormElement: (el) => (getFormElement(el)).replace(/[{}]/g, ''),\r\n\r\n        copyEvents: (fromEl, toEl, events) => {\r\n            events = _box(events);\r\n            events.forEach(function (ev, i) {\r\n                var func = fromEl[ev];\r\n                if (func) {\r\n                    toEl[ev] = function (evt) {\r\n                        func.call(this);\r\n                    };\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncDtTmEvents: (fieldName) => {\r\n            $$.copyEvents(document.getElementById(fieldName), document.getElementById('time_' + fieldName), ['onchange', 'onblur']);\r\n        }\r\n\r\n    };\r\n\r\n    return $$\r\n})(window.parent, document);"],"sourceRoot":""}